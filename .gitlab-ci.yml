image: "$CI_REGISTRY/linbit/linbit-admin-backend/test-image"

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_BRANCH == 'master'
    - if: $CI_PIPELINE_SOURCE == 'api'

stages:
  - check
  - e2e

# Use cargo to test the project
test:cargo:
  stage: check
  needs: []
  variables:
    RUSTFLAGS: "-Zinstrument-coverage"
    LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo test --offline -- -Z unstable-options --format json | cargo2junit > results.xml
    - grcov . --binary-path ./target/debug/ -s . -t cobertura --branch --ignore-not-existing --ignore "*cargo*" -o coverage.xml
    - grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "*cargo*" -o coverage.lcov
    - lcov --summary coverage.lcov
  artifacts:
    reports:
      junit:
        - results.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: '/lines\.*: \d+\.\d+%/'

test:rustfmt:
  stage: check
  needs: []
  script:
    - cargo fmt -- --version && cargo fmt -- --print-config current .
    - cargo fmt -- --check

test:compat:
  stage: check
  needs: []
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  parallel:
    matrix:
      # ubuntu-xenial, ubuntu-bionic, ubuntu-focal
      - IMAGE: rust:1.47
      # debian-bullseye
      - IMAGE: rust:1.48
      # rhel7, rhel8, sles15-sp0, sles15-sp1, sles15-sp2
      - IMAGE: rust:1.50
      # sles15-sp3
      - IMAGE: rust:1.53
      # ubuntu-jammy
      - IMAGE: rust:1.58
      # debian-buster
      - IMAGE: rust:1.60
      # rhel9
      - IMAGE: rust:1.61
      # sles15-sp4
      - IMAGE: rust:1.62
  image: $IMAGE
  script:
    - cargo check
  cache:
    key: $CI_JOB_NAME
    paths:
      - .cargo
